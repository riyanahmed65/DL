Implement the fingerprint verification system using Deep Convolution Neural

Network model.

import tensorflow as tf

from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout

from tensorflow.keras.optimizers import Adam

from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Define data directories

train_data_dir = 'path_to_train_data_directory'

test_data_dir = 'path_to_test_data_directory'

# Define image dimensions and other parameters

img_width, img_height = 128, 128

batch_size = 32

epochs = 20
# Data augmentation for training images

train_datagen = ImageDataGenerator(

rescale=1.0 / 255,

rotation_range=20,

width_shift_range=0.2,

height_shift_range=0.2,

shear_range=0.2,

zoom_range=0.2,

horizontal_flip=True,

fill_mode='nearest'

)

# Data augmentation for testing images (only rescaling)

test_datagen = ImageDataGenerator(rescale=1.0 / 255)

# Load and preprocess the dataset using data generators

train_generator = train_datagen.flow_from_directory(

train_data_dir,

target_size=(img_width, img_height),

batch_size=batch_size,

class_mode='binary'

)

test_generator = test_datagen.flow_from_directory(

test_data_dir,

target_size=(img_width, img_height),

batch_size=batch_size,

class_mode='binary'

)

# Build the CNN model
model = Sequential([

Conv2D(32, (3, 3), activation='relu', input_shape=(img_width, img_height, 3)),

MaxPooling2D((2, 2)),

Conv2D(64, (3, 3), activation='relu'),

MaxPooling2D((2, 2)),

Conv2D(128, (3, 3), activation='relu'),

MaxPooling2D((2, 2)),

Flatten(),

Dense(512, activation='relu'),

Dropout(0.5),

Dense(1, activation='sigmoid')

])

# Compile the model

model.compile(optimizer=Adam(learning_rate=0.0001), loss='binary_crossentropy',

metrics=['accuracy'])

# Train the model

model.fit(train_generator, epochs=epochs, validation_data=test_generator)

# Evaluate the model on the test set

test_loss, test_accuracy = model.evaluate(test_generator)

print(f"Test accuracy: {test_accuracy:.4f}")
