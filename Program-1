Implement Deep Feed Forward Neural Network model to classify MNIST

Handwritten Digit Recognition dataset.

Make sure you have TensorFlow installed (pip install tensorflow).

import tensorflow as tf

from tensorflow.keras.datasets import mnist

from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import Dense, Flatten

from tensorflow.keras.utils import to_categorical

# Load and preprocess the dataset

(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train, x_test = x_train / 255.0, x_test / 255.0 # Normalize pixel values to [0, 1]

y_train = to_categorical(y_train, num_classes=10)

y_test = to_categorical(y_test, num_classes=10)

# Build the neural network model

model = Sequential([

Flatten(input_shape=(28, 28)), # Flatten the 28x28 input images

Dense(128, activation='relu'), # Fully connected layer with 128 units and ReLU activation

Dense(64, activation='relu'), # Fully connected layer with 64 units and ReLU activation

Dense(10, activation='softmax') ]) # Output layer with 10 units for 10 classes and softmax

activation

# Compile the model

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the model

model.fit(x_train, y_train, epochs=10, batch_size=32, validation_split=0.1)

# Evaluate the model on the test set

test_loss, test_accuracy = model.evaluate(x_test, y_test)

print(f"Test accuracy: {test_accuracy:.4f}")
